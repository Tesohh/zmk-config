/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <75>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        backspace_td: backspace_td {
            compatible = "zmk,behavior-tap-dance";
            label = "BACKSPACE_TD";
            #binding-cells = <0>;
            bindings = <&lt 2 BACKSPACE>, <&kp BACKSPACE>;
        };
    };

    macros {
        macro_arrow: macro_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
            label = "MACRO_ARROW";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB       &kp Q  &kp W  &kp E  &kp R                 &kp T      &kp Y           &kp U            &kp I      &kp O    &kp P     &kp MINUS
&kp LCTRL     &kp A  &kp S  &kp D  &kp F                 &kp G      &kp H           &kp J            &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_ALT  &kp Z  &kp X  &kp C  &kp V                 &kp B      &kp N           &kp M            &kp COMMA  &kp DOT  &kp FSLH  &kp BACKSLASH
                            &mo 1  &mt LEFT_SHIFT SPACE  &kp ESC    &mt LCMD ENTER  &lt 2 BACKSPACE  &kp F18
            >;
        };

        lower {
            bindings = <
&trans  &trans  &trans  &kp N7  &kp N8             &kp N9    &trans    &trans             &trans  &trans     &trans  &trans
&trans  &trans  &trans  &kp N4  &mt LEFT_SHIFT N5  &kp N6    &kp LEFT  &kp DOWN           &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans  &kp N0  &kp N1  &kp N2             &kp N3    &trans    &trans             &trans  &trans     &trans  &trans
                        &trans  &trans             &trans    &trans    &kp LA(BACKSPACE)  &trans
            >;
        };

        raise {
            bindings = <
&trans  &trans     &kp GRAVE    &kp SLASH  &kp QUESTION  &kp STAR         &kp MINUS       &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PLUS   &trans     &trans
&trans  &kp TILDE  &kp PERCENT  &kp LPAR   &kp RPAR      &kp AMPERSAND    &kp UNDERSCORE  &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp EQUAL  &kp CARET  &trans
&trans  &trans     &kp DOLLAR   &kp EXCL   &kp AT        &kp HASH         &kp BACKSLASH   &kp LT            &kp GT             &kp PIPE   &trans     &trans
                                &trans     &trans        &trans           &trans          &trans            &trans
            >;
        };

        tri {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans         &trans       &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans  &sys_reset     &sys_reset   &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans  &bootloader    &bootloader  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans  &trans         &trans       &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        trilayer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
