/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <75>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        backspace_td: backspace_td {
            compatible = "zmk,behavior-tap-dance";
            label = "BACKSPACE_TD";
            #binding-cells = <0>;
            bindings = <&lt 2 BACKSPACE>, <&kp BACKSPACE>;
        };
    };

    macros {
        macro_arrow: macro_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
            label = "MACRO_ARROW";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E         &kp R                 &kp T           &kp Y           &kp U            &kp I      &kp O    &kp P     &kp MINUS
&mo 1      &kp A  &kp S  &kp D         &kp F                 &kp G           &kp H           &kp J            &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C         &kp V                 &kp B           &kp N           &kp M            &kp COMMA  &kp DOT  &kp FSLH  &kp BACKSLASH
                         &kp LEFT_ALT  &mt LEFT_SHIFT SPACE  &mt LCMD ESC    &mt LCMD ENTER  &lt 2 BACKSPACE  &mo 1
            >;
        };

        lower {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6      &kp N7            &kp N8      &kp N9        &kp N0        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT    &kp DOWN          &kp UP      &kp RIGHT     &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOL_DN  &kp C_VOL_UP  &trans
                        &trans  &trans  &trans    &trans      &trans            &trans
            >;
        };

        raise {
            bindings = <
&trans  &trans     &kp GRAVE    &kp SLASH  &kp QUESTION  &kp STAR         &kp PLUS       &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans     &trans    &trans
&trans  &kp TILDE  &kp PERCENT  &kp LPAR   &kp RPAR      &kp AMPERSAND    &kp EQUAL      &kp LEFT_BRACE    &kp RIGHT_BRACE    &trans     &kp PIPE  &trans
&trans  &trans     &kp DOLLAR   &kp AT     &kp EXCL      &kp HASH         &kp BACKSLASH  &kp LT            &kp GT             &kp CARET  &trans    &trans
                                &trans     &trans        &trans           &trans         &trans            &trans
            >;
        };

        tri {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans         &trans       &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans  &sys_reset     &sys_reset   &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans  &bootloader    &bootloader  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans  &trans         &trans       &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        trilayer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
